*howm-reminder.jax*     For Vim バージョン 7.2  Last change: 2011 October 26
==============================================================================
       Description: howm style scheduler
            Author: fuenor <fuenor@gmail.com>
            Web(Japanese):
            http://sites.google.com/site/fudist/Home/qfixdev/ver3
==============================================================================

CONTENTS                                              *howm_reminder_contents*
1. Intro                                              |howm_reminder_intro|
2. 予定・TODOの書式                                   |howm_reminder_format|
3. 予定・TODOの種類                                   |howm_reminder_desc|
4. 予定・TODOの終了                                   |howm_reminder_end|
5. 予定・TODOの繰り返し                               |howm_reminder_repeat|
6. 曜日・月末・シフト                                 |howm_reminder_cmdopt|
7. 予定とTODOのコマンド                               |howm_reminder_command|
8. 予定とTODOのオプション                             |howm_reminder_option|

==============================================================================
1. Intro                                                *howm_reminder_intro*

このヘルプではhowm_schedule.vimで使用するhowmスタイルの予定・TODOの書式につい
て解説されています。
howm_schedule.vim自体については|howm_schedule_contents|を参照してください。

==============================================================================
2. 予定・TODOの書式                                     *howm_reminder_format*

howmの予定・TODOは次のフォーマットで作成します。
>
  [タイムスタンプ](識別子){オプション} 具体的な予定やTODO

(例)
>
  [2009-10-10 14:00]@ 今日は芋煮会
  [2009-10-03]+7 ユミル=テミルにお手紙を書く

タイムスタンプの後の @ や + が、予定とTODOの識別子で、識別子の後には各種オプシ
ョンを指定します。
予定・TODOのタイムスタンプは「時刻あり」と「時刻なし」どちらの書式でも動作しま
す。

------------------------------------------------------------------------------
QFixMemo/QFixHowmで使用する場合

予定・TODOの詳しい内容については、通常のエントリのように予定・TODOの定義行の次
に書いておく事も出来るので「処理リスト」を利用するのも便利です。
次の例では、10日前から表示される「海外旅行の準備」の「処理リスト」付き締め切り
を定義しています。
>
  [2009-08-08 08:00]@9 9日間の海外旅行
  [2009-08-07]!10 海外旅行の準備(10日前から準備開始)
  { } 航空券の予約
  { } ホテルの予約
  {*} パスポートの用意

  [2009-10-10 14:00]@ 今日は芋煮会
  [2009-10-03]+7 ユミル=テミルにお手紙を書く

・g,d や g,Tを使用すると入力が楽です。
・一つのファイルに複数の予定・TODOを定義して、詳しい内容も書くときは g,o の
「アウトラインモード」を使用すると便利です。
・g,x で予定・TODO単位の削除も出来ます。
・日付以外の予定・TODO定義部分はアクションロックになっています。
  カーソルを合わせて<CR>を押すと、単発の予定・TODOは対処済に、繰り返し予定・
  TODOは次の予定日に変わります。

==============================================================================
3. 予定・TODOの種類                                       *howm_reminder_desc*

予定・TODOは6種類有ります。
以下の説明でデフォルト値が7日の場合、-「設定値」日は-7日のように読み替えてくだ
さい。
数値オプションを設定した場合は、設定した数値が適用されます。
@の場合だけ、デフォルト設定値と予定定義に設定値を指定した場合とでは優先度の下
がり方が異なります。

優先度は基準日(西暦0000年1月1日)からの経過日数で表され、優先度0日は本日までの
経過日数になります。
優先度-2日とは、今日の日付-2日（つまり一昨日）の予定と同じ優先度で扱われるとい
うことです。
優先度+2日だと今日の予定より 2日分 優先順位が高い事になります。
ただし指定日が未来でも、アクティブ化されていない場合は、アクティブ化されたもの
より優先度が低くなります。

------------------------------------------------------------------------------
@ (予定)  デフォルト 0日

何も指定しない場合は指定日から「デフォルト設定値」日を過ぎると、優先度が最低に
設定され表示されなくなります。
日付が優先度なので、表示期間中の優先度は一日ごとに低くなります。

予定定義時に数値が 2 以上に設定されている場合は「設定値」日の連続予定として扱
い、期間中の優先度は常に優先度0日(当日の予定扱い)に設定されます。
期間終了後は更に「デフォルト設定値」日経過した時点で優先度が最低に設定されて表
示されなくなります。
なお予定定義時に数値が0に設定されている場合は、指定日を超えるとすぐに表示され
なくなります。

下記の予定では 2009-01-12から2009-01-14まで3日間、当日の予定として表示され、
14日から更に「デフォルト設定値」日経過した時点で表示されなくなります。
>
  [2009-01-12]@3 2009年1月12日から3日間続く芋煮会|

------------------------------------------------------------------------------
! (締め切り)  デフォルト 7日

締め切り7日前(デフォルトの場合)から表示されるようになります。
文字通り、締め切りや納期などに使用します。

指定日の「設定値」日前に優先度が -「設定値」日でアクティブ化され、一日ごとに優
先度が上がっていきます。
指定日に達しても優先度は上がり続けるので、常に一番上に表示されます。

------------------------------------------------------------------------------
- (リマインダ)  デフォルト 1日

やらなくてもかまわないけれど、覚えておきたいような事を登録します。
気になるけれど、買うかどうか決めていない本の発売日などに、気にかけておきたい期
間を指定して使用します。

指定日から1日(デフォルトの場合)の間は優先度0日に設定され、優先度が下がる事はあ
りません。
指定日に優先度0日でアクティブ化されます。
指定日から(指定日+「設定値」-1)日の間は優先度0日に設定され、以降は優先度が指定
日+「設定値」-1日に固定されます。
従って指定日+「設定値」-1日以降は、相対的に優先度が下がっていきます。

下記のリマインダでは 2009-01-01から 2009-01-03まで3日間、当日の予定として表示
され、2009-01-04日以降は優先度が2009-01-03の予定として表示されます。
>
  [2009-01-01]-3 3日間は覚えておきたいリマインダ

------------------------------------------------------------------------------
+ (TODO)  デフォルト 7日

指定日から7日間(デフォルトの場合)ぐらいまでの間に実行したい事を登録します。

指定日に優先度が -「設定値」日でアクティブ化されます。
その後、一日ごとに優先度が上がっていきます。
優先度0日より高くなる事はないので、破ってしまった締め切りより優先度が高くなる
事はありません。

------------------------------------------------------------------------------
~ (浮沈TODO)  デフォルト 30日

適当に優先度が変わるので、いつかやろうと思っている事などを登録します。

指定日に優先度0日でアクティブ化されます。
その後「設定値」日を一周期として、優先度が浮き沈みを始めます。
「設定値」日後には優先度が0日に戻ってきます。|

------------------------------------------------------------------------------
. (対処済)  デフォルト なし

対処済みで不要になった予定やTODOに使用します。

優先度が最低に設定され、一覧表示で表示されなくなります。
先頭に & を付けて予定・TODOの終了指定にも使います。|

==============================================================================
4. 予定・TODOの終了                                        *howm_reminder_end*

予定・TODOの定義行に、 &[2009-08-12]. のように終了日を指定する事が出来ます。
終了指定日を過ぎると予定は表示されなくなります。
>
  [2009-08-08]@7 &[2009-08-12]. 2009年8月8日から7日間の予定ですが、12日を過ぎると終了します

予定・TODOの定義行なら何処にあっても有効です。
時間指定をすると指定時刻以降は表示されません。

>
  [2009-08-08]@7 2009年8月8日から7日間の予定ですが、12日の18:00を過ぎると終了します &[2009-08-12 18:00].

また、日付以外の予定・TODOの定義部分はアクションロックになっています。
単発の予定やTODOはアクションロックで対処済みに変更することが出来ます。

*終了日の指定
時刻を指定しない終了日は指定日の翌日ではなく、指定日に終了するようにも出来ます。
>
  "終了日指定のオフセット
  let QFixHowm_EndDateOffset = -1

この場合同じリマインダでも終了日が異なるようになります。
>
  [2009-08-08]@7 &[2009-08-12]. 2009年8月8日から7日間の予定ですが、12日になると終了します

==============================================================================
5. 予定・TODOの繰り返し                                 *howm_reminder_repeat*

繰り返す予定やTODOは次のように指定します。
>
  [2009-01-12]@ 2009年1月12日は、舞踏会の日(単発予定)
  [2009-01-12]@@ 2009年1月12日から、毎月12日は舞踏会の日
  [2009-01-12]@@@ 2009年1月12日から、毎年1月12日は舞踏会の日
  [2009-01-12]@(7) 2009年1月12日から、7日おきに(毎週月曜は)舞踏会の日

指定日から始まる、月単位の繰り返し
[タイムスタンプ]識別子x2
>
  [2009-01-12]@@ 2009年1月12日から始まる、毎月12日の予定

指定日から始まる、年単位の繰り返し
[タイムスタンプ]識別子x3
>
  [2009-01-12]@@@ 2009年1月12日から始まる、毎年1月12日の予定
指定日から始まる、指定日間隔の繰り返し
[タイムスタンプ]識別子(繰り返し間隔)
>
  [2009-01-12]@(７) 2009年1月12日から始まる、7日おき(毎週月曜)の予定

==============================================================================
6. 曜日・月末・シフト                                  *howm_reminder_cmdopt*

指定月の指定曜日
>
  [2009-12-01]@(3*Wed) 2009年12月第3水曜の単発予定

毎月の指定曜日
>
  [2009-12-01]@@(1*Wed) 2009年12月以降の、毎月第1水曜の繰り返し予定

毎年特定月の指定曜日
>
  [2009-12-01]@@@(2*Mon) 2009年12月以降の、毎年12月の第２月曜の繰り返し予定

次のような書き方では、繰り返し予定にはなりません。
>
  [2009-04-01]@(2*Sat) 繰り返し予定にならない例
<
  結果的に2009年4月11日(土)の単発予定として扱われます。

これを利用すると、期間限定の曜日指定に使えます。
たとえば2009年4月の第2土曜と第3土曜だけの予定は日付指定する必要が無く、次のよ
うに書けます。

>
  [2009-04-01]@(2*Sat) 2009年4月の第2土曜と第3土曜だけの予定
  [2009-04-01]@(3*Sat) 2009年4月の第2土曜と第3土曜だけの予定

実際には [ や ＠ などの日付、時刻以外の予定・TODO定義部分にカーソルを合わせて
<CR>を押すと、アクションロックが実行されて該当日付に変更されるので日付を確認し
て使用するのが望ましいでしょう。

------------------------------------------------------------------------------
（毎年）毎月などの特定曜日指定

毎月第2水曜の予定等を指定したい事もあると思います。
>
  [2009-01-01]@(2*Wed) 2009年1月12日は舞踏会の日(単発予定)
  [2009-01-01]@@(2*Wed) 2009年1月から毎月第２水曜は舞踏会の日
  [2009-01-01]@@@(2*Wed) 2009年1月から、毎年１月の第２水曜は舞踏会の日

（毎年）毎月特定曜日指定の予定は({数値}*{曜日指定})のように、
数値と * 、 {曜日指定子} で指定します。

{曜日指定子}         Sun Mon Tue Wed Thu Fri Sat

------------------------------------------------------------------------------
月末指定

00日を指定すると月末として扱われます。
主に毎月の繰り返し予定での使用を想定しています。
>
  [2009-01-00]@ 2009年1月末は舞踏会の日
  [2009-01-00]@@ 2009年1月から毎月末は舞踏会の日

------------------------------------------------------------------------------
休日シフト

もしも繰り返し予定日が「日曜または休日」と重なったら、一日前の予定に変更したい
というような事があると思います。
そのような場合、(-Holiday) か (+Holiday) を指定すると自動で予定日を「日曜また
は休日」でない日に変更します。
>
  " 毎月繰り返すリマインダの例 (25日発売の雑誌など)
  [2009-01-25]--(-Holiday) 25日が日祝ならそれ以外の最も近い日祝以外の日

(-Holiday)         日曜でも休日でもない前の日
(+Holiday)         日曜でも休日でもない後の日

休日とみなされるのは QFixHowm_HolidayFileで指定されるファイルの休日定義です。
|qfixmemo_submenu_holiday|

------------------------------------------------------------------------------
平日シフト

もしも繰り返し予定日が「土曜、日曜または休日」と重なったら、平日の予定に変更し
たいというような事があると思います。
そのような場合、(-Weekday) か (+Weekday) を指定すると自動で予定日を「土曜、日
曜または休日」でない日に変更します。
>
  " 毎月繰り返すリマインダの例 (土日祝が休みの金融機関への振込日等)
  [2009-01-25]--(-Weekday) 25日が土日祝ならそれ以外の最も近い平日(月ー金)

(-Weekday)         土日でも休日でもない前の日
(+Weekday)         土日でも休日でもない後の日

休日とみなされるのは QFixHowm_HolidayFileで指定されるファイルの休日定義です。
|qfixmemo_submenu_holiday|

------------------------------------------------------------------------------
曜日シフト
[2011/12/11 00:00]
また予定日が水曜だったら、木曜に変更したいというような場合もあるかもしれませ
ん。
そのような場合、(+Wed)を指定すると自動で予定日を木曜に変更します。
>
  [2009-01-10]@@(+Wed) 毎月10日はサービスデーですが水曜定休なので、10日が水曜なら11日になります

曜日シフトは ({シフト指定子}{曜日指定})で行います。

{シフト指定子}         + -
{曜日指定子}           Sun Mon Tue Wed Thu Fri Sat Hol

特定曜日の予定を翌日にしたい場合は(+Wed)の様に + を前に、前日にしたい場合は
(-Sun)の様に - を前に付けます。
ただし指定間隔の繰り返しを使用する場合だけは、次のように間隔指定の中に書きま
す。
>
  [2009-01-12]@(5+Mon) 2009年1月12日から、5日おきに舞踏会の日で、もし月曜なら火曜に変更

予定日が指定曜日なら前日
>
  [2009-01-12]@@(-Sun) 毎月12日の予定で、日曜なら土曜に変更
  [2009-01-12]@@@(-Tue) 毎年1月12日の予定で、火曜なら月曜に変更

予定日が指定曜日なら翌日
>
  [2009-01-12]@@(+Mon) 毎月12日の予定で、月曜なら火曜に変更
  [2009-01-12]@@@(+Sat) 毎年1月12日の予定で、土曜なら日曜に変更

指定間隔の繰り返しの場合
>
  [2009-01-12]@(5-Wed)  2009年1月12日から5日おきの予定で、水曜なら火曜に変更
  [2009-01-12]@(9+Fri) 2009年1月12日から9日おきの予定で、金曜なら土曜に変更

次のような書き方では、繰り返し予定にはなりません。
>
  [2009-01-11]@(+Sun) 繰り返し予定にならない例

2009年1月11日が日曜なので、結果的に2009年1月12日(月)の単発予定として扱われま
す。
実際には [ や ＠ などの日付、時刻以外の予定・TODO定義部分にカーソルを合わせて
<CR>を押すと、アクションロックが実行されて該当日付に変更されるので、日付を確認
して使用するのが望ましいでしょう。

------------------------------------------------------------------------------
指定日の n日前/後

指定日の前日など特定日の n日前/後という指定も可能です。
()内指定の最後に -1 や +10 などシフト日数を指定します。
主に繰り返し予定のオプションとして使用します
>
  [2009-01-00]@@(-5) 毎月末の5日前は舞踏会の日
  [2009-01-01]@@(2*Wed-1) 2009年1月から毎月第２水曜の前日は舞踏会の日
  [2009-01-01]@@@(2*Wed-1) 2009年1月から、毎年１月の第２水曜の前日は舞踏会の日

たとえば Microsoft Windowsの定期アップデートは「毎月第２火曜日の翌日」に行われ
る事になっています。
それなら「第２水曜日」の指定でもよさそうですが、その月が水曜日から始まっている
場合の「第２火曜日の翌日」は第３水曜日になります。
>
  [2009-01-01]@@(2*Tue+1) Windowsアップデートは「毎月第２火曜日の翌日」

------------------------------------------------------------------------------
予定・TODOの自動繰り返し仕様

アクティブ化された予定・TODOの繰り返しは自動で内部的に日付変換されます。

予定・TODOは予定を終了すると、自動的に次の一番近い未来の予定日へ内部的に変換さ
れます。
締め切り ! とTODO + は自動的に終了しないので、アクションロック等を使用して手動
で変更する必要があります。
これは締め切りやTODOが何時終わったかは、howm側からは知り得ないからです。
アクティブ化された予定・TODOは以下のように内部的に変換されます

@(予定)             今日が予定日ならそのままで、その他は一番近い未来の予定日に
                    変換します。
-(リマインダ)       今日が予定日ならそのままで、その他は一番近い過去の予定日に
                    変換します。
!(締め切り)         曜日シフトだけ行い、常に指定日を使用します。
+(TODO)             曜日シフトだけ行い、常に指定日を使用します。

繰り返し指定はアクションロックの時だけ意味を持ちます。

リマインダの自動繰り返し
たとえば毎月25日に発売される雑誌のチェックをリマインダとして自動繰り返しで設定
するとします。
>
  [2009-01-25]--(-Hol)5 毎月25日に発売される雑誌のチェック

こうすると25日から30日まで当日の予定としてリマインダが表示され、以降はどんどん
優先度が下がっていきます。
雑誌のチェックを実行し終わった場合はアクションロックで来月のリマインダとして変
更します。
雑誌のチェックを実行するにせよしないにせよ、25日になると沈んでいたリマインダが
当日の予定として表示され……というように自動的に繰り返す事になります。
また、「休日シフト」を使用しているので25日が休日であれば前日に変更されます。


------------------------------------------------------------------------------
繰り返し予定・TODOの展開

予定・TODOの定義行にカーソルを合わせて、 <Leader>,rdを実行すると予定・TODOが展
開されます。
10<Leader>,rdのようにカウント指定可能です。

今日の日付が5月5日だとして、次の予定・TODOの定義行で 3<Leader>,rdを実行します。
>
  [2009-01-12]@ 今日は芋煮会

この行が3行分展開されて以下のようになります。
今日の日付が5月5日なので5月5日から始まります。
>
  [2009-01-12]@ 今日は芋煮会
  [2009-05-05]@ 今日は芋煮会
  [2009-05-06]@ 今日は芋煮会
  [2009-05-07]@ 今日は芋煮会

繰り返し予定は、定義に応じて展開されます。
>
  [2009-01-12]@@(2*Mon) 毎月第2月曜はパジャマパーティー

3<Leader>rdで、この行が3行分展開されて以下のようになります。
>
  [2009-01-12]@@(2*Mon) 毎月第2月曜はパジャマパーティー
  [2009-05-11]@ 毎月第2月曜はパジャマパーティー
  [2009-06-08]@ 毎月第2月曜はパジャマパーティー
  [2009-07-13]@ 毎月第2月曜はパジャマパーティー
<
  月単位の繰り返しなので月単位に展開されます。
  単発予定に変更されるとき、曜日シフトも自動的に行われます。

==============================================================================
通常の数値オプション

全て組み合わせると次のような指定が出来ます。

このイベントは2009年10月10日から開始される。
毎月10日から3日間開催
10日が日曜の場合は月曜(11日)から3日間開催される。
>
  [2009-10-10]@@(+Sun)3 パジャマパーティ

==============================================================================
7. 予定とTODOのコマンド                                *howm_reminder_command*

キーマップリーダーを g にした場合、予定の一覧表示は g,y になります。

<Leader>,y       予定の一覧表示
<Leader>,t       TODOの一覧表示
<Leader>,,       メニュー画面で予定・TODO表示
<Leader>,ry      予定の一覧表示(再検索)
<Leader>,rt      TODOの一覧表示(再検索)
<Leader>,r,      メニュー画面で予定・TODO表示(再検索)

g,y を実行すると予定が表示され、以降はg,yを実行するとキャッシュされた予定・
TODOが表示されます。
キャシュを無効にして再検索した最新の予定・TODOを表示するには g,ry を実行しま
す。
キャッシュを無効にする必要があるのは日付が変わった時と予定・TODO自体を変更した
場合で、それ以外は常にキャッシュ表示でも問題ありません。

通常のエントリ同様に予定・TODOを検索してからのプレビューやジャンプで予定の定義
行を参照できます。
デフォルトで非表示にしたい場合はQFixHowm_SchedulePreview で変更出来ます。
>
  "予定・TODOでのプレビュー表示ON/OFF
  let QFixHowm_SchedulePreview = 0

予定一覧表示では、予定と締め切りが表示されます。
TODO一覧表示では、予定以外のTODO全種類が表示されます。
メニュー画面の一覧表示では、予定・TODOの全種類が表示されます。

それぞれ表示したい予約・TODOは次のオプションで変更可能です。
,t では 予定表示期間が -1 なので、デフォルトで予定は表示されません。
表示する予定・TODOパターンは正規表現ですので、- を指定したいときは一番前に設定
しないと動作がおかしくなります。
>
  ",yでの予定表示期間
  let QFixHowm_ShowSchedule     = 10
  ",tでの予定表示期間
  let QFixHowm_ShowScheduleTodo = -1
  ",,での予定表示期間
  let QFixHowm_ShowScheduleMenu = 10

  ",y で表示される予定・TODOパターン
  let QFixHowm_ListReminder_ScheExt = '[@!.]'
  ",t で表示される予定・TODOパターン
  let QFixHowm_ListReminder_TodoExt = '[-@+!~.]'
  ",, で表示される予定・TODOパターン
  let QFixHowm_ListReminder_MenuExt = '[-@+!~.]'

------------------------------------------------------------------------------
g,y g,t g,, での予定の表示日数をコマンド実行時にも指定可能です。
365g,y とすると365日分の予定を表示します。
以降は g,y で365日分表示するようになります。

なお同一日付で同一内容の予定・TODOは一つにまとめて表示されます。

実行することなく特定の期間を過ぎてしまったリマインダを削除する事も出来ます。
以下のように設定すると、100日以上たったリマインダは表示しません。
>
  "優先度が今日より指定以下の予定とリマインダを削除する。
  let QFixHowm_RemovePriorityDays = 100

予定・TODOの時刻表示行のタイプは @ ですが、 任意のタイプに変更することが出来ま
す。
>
  "予定・TODOの時刻表示行タイプ
  let QFixHowm_TodayLineType = '@'

------------------------------------------------------------------------------
予定・TODOのキャッシュ表示

一度表示した予定・TODOはキャッシュを使用して再検索なしに表示することができま
す。
キャッシュの保持時間(秒数)は QFixHowm_ListReminderCacheTime で指定します。
>
  "予定・TODO表示のキャッシュ保持時間(秒)
  let QFixHowm_ListReminderCacheTime = 5*60

例は5分(デフォルト)ですが、0 にするとキャッシュは使用しません。
キャッシュ保持時間内でも <Leader>ry <Leader>rt を使用することで再検索して最新
の結果を表示可能です。

キャッシュは Vimを終了すると無効になります。

------------------------------------------------------------------------------
個人的なおすすめ

予定で表示されるパターンに - のリマインダーを追加して使用するのをおすすめしま
す。
本家(Emacs版)ではリマインダーはTODOになっていますが、リマインダーは特定の日付
に紐付けられている予定の一種でありTODOではないと考えるからです。
>
  ",y で表示される予定・TODOパターン
  let QFixHowm_ListReminder_ScheExt = '[-@!]'

本家(Emacs版)の作者も予定とTODOを分けているのを失敗だと考えているようなので、
予定に全部表示するのも良いかもしれません。
>
  ",y で表示される予定・TODOパターン
  let QFixHowm_ListReminder_ScheExt = '[-@+!~]'

------------------------------------------------------------------------------
予定・TODOの表示順

予定・TODOの表示は、タイプ別にソートしてからタイプごとに時間でソートしていま
す。
>
  "予定・TODOのソート優先度
  let QFixHowm_ReminderPriority = {'@' : 1, '!' : 2, '+' : 3, '-' : 4, '~' : 5, '.' : 6}
  "予定・TODOソートの昇順/降順
  let QFixHowm_ReminderSortMode = 1

@ と ! だけは同じタイプとしてソートしたいような場合は優先度を同じに設定します。
こうすると時間単位の予定と締め切りが時間順に並ぶので、個人的にはおすすめです。
>
  "予定・TODOのソート優先度
  let QFixHowm_ReminderPriority = {'@' : 1, '!' : 1, '+' : 3, '-' : 4, '~' : 5, '.' : 6}

==============================================================================
8. 予定とTODOのオプション                               *howm_reminder_option*

予定とTODOのデフォルト値の指定
>
  "予定
  let QFixHowm_ReminderDefault_Schedule = 0
  "締め切り
  let QFixHowm_ReminderDefault_Deadline = 7
  "TODO
  let QFixHowm_ReminderDefault_Todo     = 7
  "リマインダ
  let QFixHowm_ReminderDefault_Reminder = 1
  "浮沈TODO
  let QFixHowm_ReminderDefault_UD       = 30

==============================================================================
予定・TODOの曜日表示

Quickfixウィンドウ上での予定・TODOの曜日表示を日本語表記に変更可能です。
以下を .vimrcに追加すると 日、月、火、水、木、金、土のように表示します。
>
  let QFixHowm_JpDayOfWeek = 1

実際には以下のオプションが定義されて使用されます。
>
  let QFixHowm_DayOfWeekDic = {'Sun' : "日", 'Mon' : "月", 'Tue' : "火", 'Wed' : "水", 'Thu' : "木", 'Fri' : "金", 'Sat' : "土"}
  let QFixHowm_DayOfWeekReg = "\(日\|月\|火\|水\|木\|金\|土\)"

Su Mo Tu など好みの曜日表記に変更したい場合は QFixHowm_DayOfWeekDicと
QFixHowm_DayOfWeekRegを .vimrcで定義して下さい。
QFixHowm_DayOfWeekDicと QFixHowm_DayOfWeekRegを設定する場合
QFixHowm_JpDayOfWeekは必要はありません。

なおQuickfixウィンドウ上での表示が変更されるだけで、予定・TODOの定義には使用で
きません。

==============================================================================
祝日や特別な日を強調表示する
|qfixmemo_submenu_holiday|

休日定義ファイルを howm_dir へコピーして下さい。
https://github.com/fuenor/qfixhowm/tree/master/misc/holiday

休日名のデフォルトは以下の通りです。
>
  "休日名
  let QFixHowm_ReminderHolidayName = '元日\|成人の日\|建国記念の日\|昭和の日\|憲法記念日\|みどりの日\|こどもの日\|海の日\|敬老の日\|体育の日\|文化の日\|勤労感謝の日\|天皇誕生日\|春分の日\|秋分の日\|振替休日\|国民の休日\|日曜日'

ユーザー定義の休日や特別な日を強調表示する事も出来ます。
>
  "休日名
  "ユーザー定義の休日
  let QFixHowm_UserHolidayName    = '創立記念日\|有給休暇\|代休'
  "ユーザー定義の特別な日
  let QFixHowm_UserSpecialdayName = '誕生日\|記念日'

創立記念日などを正規表現で適当に追加して下さい。

  (注意)
  ユーザー定義の休日も「休日シフト」の対象にするためには QFixHowm_HolidayFile
  で指定した休日定義ファイル内で定義する必要があります。
  デフォルトは howm_dir直下の Sche-Hd-0000-00-00-000000.howmです。
  >
    " 休日定義のファイル名を指定
    let QFixHowm_HolidayFile  = 'Sche-Hd-0000-00-00-000000.howm'

速度的な観点からお勧めしませんが、休日定義ファイルを複数にしたい場合は
QFixHowm_HolidayFileでワイルドカードを使用する方法もあります。
>
  " 休日定義のファイル名を指定(howm_dir直下の Sche-Hd-で始まるファイルは全て休日定義ファイル)
  let QFixHowm_HolidayFile  = 'Sche-Hd-*.howm'

フルパスでの指定も可能です。
>
  " 休日定義のファイル名を指定(c:/holiday/直下のhowmファイルをすべて休日定義ファイルとして扱う)
  let QFixHowm_HolidayFile  = 'c:/holiday/*.howm'

休日定義ファイルには独自拡張の繰り返し予定を使用しています。
繰り返し予定が使えない howmと howm_dir を共有する場合、繰り返し予定・TODOの展
開を使用して単発予定に変換して下さい。

==============================================================================
今日の日付行と時刻行

予定やTODO表示の際に、現在日付行や現在時刻行を表示することが出来ます。
時刻付きの予定・TODOを多用しているなら時刻行も表示するようにしてみて下さい。
時刻行が日付行の一行前にくる場合には非表示になり、時刻行と日付行が連続して表示
されることはありません。

予定やTODO表示の際には現在日付行や現在時刻行、境界行が表示されます。
現在時刻行や境界行が連続して表示される場合は適宜非表示にされます。
>
  "予定やTODOに現在日付行や現在時刻行、境界行を表示する
  let QFixHowm_ShowTodayLine = 3
<
    0      何も表示しない
    1      日付行のみ
    2      日付行と時刻行
    3      日付行と時刻行と境界行

QFixHowmの予定・TODO表示の際、Quickfixウィンドウ上では g. か g,. で現在日行へ
移動できます。
なお現在日行と現在時刻行で howm_dir の QFixHowm_TodayFnameの内容がプレビュー表
示され、<CR>で開く事が出来ます。
簡単なTodoリスト代わりなどに使用してください。

ファイル名等は以下のオプションで変更可能です。
>
  let QFixHowm_TodayFname = '='
  let QFixHowm_ShowTodayLineStr = '------------------------------'

==============================================================================
予定とTODOの色

色分けはqfixapp/syntax/howm_schedule.vimで定義されています。
直接 howm_schedule.vimを書き換えても問題ないのですが、howmのファイルタイプを変
更してから対応するシンタックスファイルを作成する方法もあります。

howmのファイルタイプは howm-mode.vimとの互換性のため、howm_memo に設定されてい
ます。
.vimrcに追加することでファイルタイプを QFixHowm_FileTypeで howm など好みのファ
イルタイプへ変更可能です。
>
  "howmのファイルタイプ
  let QFixHowm_FileType = 'howm'

この時有効になるのは ファイルタイプ howm のシンタックスです。
qfixapp/syntaxの howm_schedule.vimから、howm.vimへファイル名を変更しないと、
QFixHowm独自の色分けは有効になりません。
これを利用してhowm.vimにリネームしてから howm.vimを書き換えすると、アップデー
ト時にファイルを上書きしても変更したシンタックスファイルは上書きされません。

==============================================================================
一日一度だけ起動時に自動で予定・TODOを表示する

一日一度だけ起動時に自動で予定・TODOを表示することが出来ます。

起動したいコマンドを予定なら 'y'、 TODOなら 't' のように QFixHowm_VimEnterCmd
にコマンド指定します。
デフォルトは ''(空文字列)なので何も実行されません。
>
  "初回起動時に実行したいコマンド
  let QFixHowm_VimEnterCmd = 'y'

QFixHowm_VimEnterMsg を定義するとコマンド実行前に確認するようになります。

>
  "自動起動コマンド表示の確認用メッセージ
  let QFixHowm_VimEnterMsg = '今日の予定を表示します'
<
デフォルトでは表示する基準時間が 07:00で、初回起動時間を保存するファイルは
'~/.vimenter.qf' として定義されています
>
  "初回起動チェックの基準時間指定
  let QFixHowm_VimEnterTime = '07:00'
  "初回起動時間を保存するファイル名
  let QFixHowm_VimEnterFile = '~/.vimenter.qf'

==============================================================================
特定の期間を過ぎてしまったリマインダを削除する

実行することなく特定の期間を過ぎてしまったリマインダを削除出来ます。
以下のように設定すると、100日以上たったリマインダは表示しません。
>
  "優先度が今日よりこれ以上低い予定とリマインダを削除する。
  let QFixHowm_RemovePriorityDays = 100

==============================================================================
アクティブ化されていない予定やTODOを表示する
>
  let QFixHowm_RemovePriority  = 0

処理済みの予定やTODOも表示したい場合は-1に設定して下さい。
デフォルト値は1です。

==============================================================================
タイムゾーン

GMTとの差を指定します。
デフォルト値は日本用の -9時間です。
>
  "GMTとの時差
  let QFixHowm_ST = -9
<
==============================================================================
予定・TODOの検索場所指定

QFixHowm_ScheduleSearchDir で予定・TODOの検索に使用するディレクトリを指定する
ことが出来ます。
後述しますがファイルが多くなりgrepが遅くなってきて、予定・TODOの表示に時間がか
かるような場合に使用する事を主に想定しています。

指定場所以下しか予定・TODOの検索が行われないので予定・TODOを定義する際はファイ
ルのディレクトリに気をつける必要があります。
検索場所を限定する時には「複数のクイックメモ」で予定・TODO専用のファイルを用意
して簡単にアクセスできるようにすると便利です。
QFixHowm_ScheduleSearchDirを利用すると仕事用の予定やプライベートの予定を「タイ
トルタグフィルタ」を使用しないで切り替えたりも出来ます。

予定・TODOの検索場所は以下の順番で最初に見つかった、空でない指定ディレクトリ以
下が使用されます。

  1 QFixHowm_ScheduleSearchDir
  2 qfixmemo_dir
  2 howm_dir

howm_dirの下に scheduleというディレクトリを作り、そこに予定・TODOを定義したフ
ァイルを置く場合は次のようにします。
>
  "予定・TODOの検索場所指定
  let QFixHowm_ScheduleSearchDir = howm_dir.'/schedule'
  "予定・TODOの検索ファイル名指定
  let QFixHowm_ScheduleSearchFile = ''

予定・TODOのファイルを作成する場所は howm_dir以下に設定すると、通常の検索でも
引っかかるので便利かと思います。
QFixHowm_ScheduleSearchDir 以下の特定ファイルだけ検索したい場合は更に
QFixHowm_ScheduleSearchFile でファイル名を指定します。
デフォルトでは共に空文字列が指定されています。

==============================================================================
予定・TODOの表示が遅くなってきた場合

長期間howmの予定・TODOを使っていると予定・TODO表示が遅くなってくることがありま
す。
主な原因としてはすでに終了した古い予定・TODO(特に終了した@予定)などがgrepによ
り抽出され処理に時間がかかることによるようです。
(作者の環境では5000件の古い@予定があると表示に5秒程度かかります)

根本的な対処法は不要になった予定・TODOが大量にある場合は予定・TODO を削除する
か、検索対象になるファイル数を減らすことしかありません。
一つの解として新規howmファイル名指定と「予定・TODOの検索場所指定」を利用して予
定・TODOの検索場所を限定する方法があります。
>
  " howmファイル保存場所
  let howm_dir      = 'c:/howm'

  " howmファイル名
  let howm_filename = 'recent/%Y/%m/%Y-%m-%d-%H%M%S.howm'
  " 予定・TODOの検索場所指定
  let QFixHowm_ScheduleSearchDir = howm_dir.'/recent'

こうすると新規howmファイルは c:/howm/recent 以下に作成されることになり、また予
定・TODOの検索対象が c:/howm/recent 以下なので新規ファイル内の予定・TODOが表示
対象になります。
メモ内に予定・TODOが増えて表示が遅くなってきたら適当に古いディレクトリ(現在
2011年なら/2010/ディレクトリをまるごとなど)を c:/howm に移動すると、検索対象フ
ァイルが減るので表示が高速化されます。
移動したディレクトリ内のファイルは予定・TODO表示の検索対象外になりますが、依然
として howm_dir内に存在していることになるので通常のgrep検索の対象から外れるこ
とはありません。

この場合は繰り返し予定や10年後など遠い未来の予定・TODOを記述したファイルを移動
してしまわないように気を付ける必要があります。

  vim:tw=78:ts=8:ft=howm_reminder.help:norl:et:
